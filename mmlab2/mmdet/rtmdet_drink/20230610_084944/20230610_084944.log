2023/06/10 08:49:46 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.12 (main, Jun  7 2023, 12:45:35) [GCC 9.4.0]
    CUDA available: True
    numpy_random_seed: 551507
    GPU 0: Tesla V100-SXM2-16GB
    CUDA_HOME: /usr/local/cuda
    NVCC: Cuda compilation tools, release 11.8, V11.8.89
    GCC: x86_64-linux-gnu-gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0
    PyTorch: 2.0.1+cu118
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.15.2+cu118
    OpenCV: 4.7.0
    MMEngine: 0.7.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 551507
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/06/10 08:49:48 - mmengine - INFO - Config:
default_scope = 'mmdet'
default_hooks = dict(
    timer=dict(type='IterTimerHook'),
    logger=dict(type='LoggerHook', interval=5),
    param_scheduler=dict(type='ParamSchedulerHook'),
    checkpoint=dict(
        type='CheckpointHook', interval=10, max_keep_ckpts=2,
        save_best='auto'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    visualization=dict(type='DetVisualizationHook'))
env_cfg = dict(
    cudnn_benchmark=False,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [dict(type='LocalVisBackend')]
visualizer = dict(
    type='DetLocalVisualizer',
    vis_backends=[dict(type='LocalVisBackend')],
    name='visualizer')
log_processor = dict(type='LogProcessor', window_size=50, by_epoch=True)
log_level = 'INFO'
load_from = 'https://download.openmmlab.com/mmdetection/v3.0/rtmdet/rtmdet_tiny_8xb32-300e_coco/rtmdet_tiny_8xb32-300e_coco_20220902_112414-78e30dcc.pth'
resume = False
train_cfg = dict(
    type='EpochBasedTrainLoop',
    max_epochs=40,
    val_interval=10,
    dynamic_intervals=[(280, 1)])
val_cfg = dict(type='ValLoop')
test_cfg = dict(type='TestLoop')
param_scheduler = [
    dict(type='LinearLR', start_factor=1e-05, by_epoch=False, begin=0, end=30),
    dict(
        type='CosineAnnealingLR',
        eta_min=9.375000000000001e-06,
        begin=20,
        end=40,
        T_max=20,
        by_epoch=True,
        convert_to_iter_based=True)
]
optim_wrapper = dict(
    type='OptimWrapper',
    optimizer=dict(type='AdamW', lr=0.0001875, weight_decay=0.05),
    paramwise_cfg=dict(
        norm_decay_mult=0, bias_decay_mult=0, bypass_duplicate=True))
auto_scale_lr = dict(enable=False, base_batch_size=16)
dataset_type = 'CocoDataset'
data_root = 'data/Drink_284_Detection_coco/'
backend_args = None
train_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='CachedMosaic',
        img_scale=(640, 640),
        pad_val=114.0,
        max_cached_images=20,
        random_pop=False),
    dict(
        type='RandomResize',
        scale=(1280, 1280),
        ratio_range=(0.5, 2.0),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(640, 640)),
    dict(type='YOLOXHSVRandomAug'),
    dict(type='RandomFlip', prob=0.5),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(
        type='CachedMixUp',
        img_scale=(640, 640),
        ratio_range=(1.0, 1.0),
        max_cached_images=10,
        random_pop=False,
        pad_val=(114, 114, 114),
        prob=0.5),
    dict(type='PackDetInputs')
]
test_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='Resize', scale=(640, 640), keep_ratio=True),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(
        type='PackDetInputs',
        meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                   'scale_factor'))
]
train_dataloader = dict(
    batch_size=12,
    num_workers=4,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=True),
    batch_sampler=None,
    dataset=dict(
        type='CocoDataset',
        data_root='data/Drink_284_Detection_coco/',
        ann_file='train_coco.json',
        data_prefix=dict(img='images/'),
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='CachedMosaic',
                img_scale=(640, 640),
                pad_val=114.0,
                max_cached_images=20,
                random_pop=False),
            dict(
                type='RandomResize',
                scale=(1280, 1280),
                ratio_range=(0.5, 2.0),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(640, 640)),
            dict(type='YOLOXHSVRandomAug'),
            dict(type='RandomFlip', prob=0.5),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(
                type='CachedMixUp',
                img_scale=(640, 640),
                ratio_range=(1.0, 1.0),
                max_cached_images=10,
                random_pop=False,
                pad_val=(114, 114, 114),
                prob=0.5),
            dict(type='PackDetInputs')
        ],
        backend_args=None,
        metainfo=dict(
            classes=('cola', 'pepsi', 'sprite', 'fanta', 'spring', 'ice',
                     'scream', 'milk', 'red', 'king'),
            palette=[(220, 20, 60), (255, 165, 0), (119, 11, 32), (0, 0, 142),
                     (29, 123, 243), (101, 205, 228), (240, 128, 128),
                     (154, 205, 50), (4, 139, 34), (139, 0, 0)])),
    pin_memory=False)
val_dataloader = dict(
    batch_size=1,
    num_workers=2,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='CocoDataset',
        data_root='data/Drink_284_Detection_coco/',
        ann_file='val_coco.json',
        data_prefix=dict(img='images/'),
        test_mode=True,
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='Resize', scale=(640, 640), keep_ratio=True),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(
                type='PackDetInputs',
                meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                           'scale_factor'))
        ],
        backend_args=None,
        metainfo=dict(
            classes=('cola', 'pepsi', 'sprite', 'fanta', 'spring', 'ice',
                     'scream', 'milk', 'red', 'king'),
            palette=[(220, 20, 60), (255, 165, 0), (119, 11, 32), (0, 0, 142),
                     (29, 123, 243), (101, 205, 228), (240, 128, 128),
                     (154, 205, 50), (4, 139, 34), (139, 0, 0)])))
test_dataloader = dict(
    batch_size=1,
    num_workers=2,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False),
    dataset=dict(
        type='CocoDataset',
        data_root='data/Drink_284_Detection_coco/',
        ann_file='val_coco.json',
        data_prefix=dict(img='images/'),
        test_mode=True,
        pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='Resize', scale=(640, 640), keep_ratio=True),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(
                type='PackDetInputs',
                meta_keys=('img_id', 'img_path', 'ori_shape', 'img_shape',
                           'scale_factor'))
        ],
        backend_args=None,
        metainfo=dict(
            classes=('cola', 'pepsi', 'sprite', 'fanta', 'spring', 'ice',
                     'scream', 'milk', 'red', 'king'),
            palette=[(220, 20, 60), (255, 165, 0), (119, 11, 32), (0, 0, 142),
                     (29, 123, 243), (101, 205, 228), (240, 128, 128),
                     (154, 205, 50), (4, 139, 34), (139, 0, 0)])))
val_evaluator = dict(
    type='CocoMetric',
    ann_file='data/Drink_284_Detection_coco/val_coco.json',
    metric='bbox',
    format_only=False,
    backend_args=None,
    proposal_nums=(100, 1, 10))
test_evaluator = dict(
    type='CocoMetric',
    ann_file='data/Drink_284_Detection_coco/val_coco.json',
    metric='bbox',
    format_only=False,
    backend_args=None,
    proposal_nums=(100, 1, 10))
tta_model = dict(
    type='DetTTAModel',
    tta_cfg=dict(nms=dict(type='nms', iou_threshold=0.6), max_per_img=100))
img_scales = [(640, 640), (320, 320), (960, 960)]
tta_pipeline = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(
        type='TestTimeAug',
        transforms=[[{
            'type': 'Resize',
            'scale': (640, 640),
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale': (320, 320),
            'keep_ratio': True
        }, {
            'type': 'Resize',
            'scale': (960, 960),
            'keep_ratio': True
        }],
                    [{
                        'type': 'RandomFlip',
                        'prob': 1.0
                    }, {
                        'type': 'RandomFlip',
                        'prob': 0.0
                    }],
                    [{
                        'type': 'Pad',
                        'size': (960, 960),
                        'pad_val': {
                            'img': (114, 114, 114)
                        }
                    }],
                    [{
                        'type':
                        'PackDetInputs',
                        'meta_keys':
                        ('img_id', 'img_path', 'ori_shape', 'img_shape',
                         'scale_factor', 'flip', 'flip_direction')
                    }]])
]
model = dict(
    type='RTMDet',
    data_preprocessor=dict(
        type='DetDataPreprocessor',
        mean=[103.53, 116.28, 123.675],
        std=[57.375, 57.12, 58.395],
        bgr_to_rgb=False,
        batch_augments=None),
    backbone=dict(
        type='CSPNeXt',
        arch='P5',
        expand_ratio=0.5,
        deepen_factor=0.167,
        widen_factor=0.375,
        channel_attention=True,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True),
        init_cfg=dict(
            type='Pretrained',
            prefix='backbone.',
            checkpoint=
            'https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth'
        ),
        frozen_stages=4),
    neck=dict(
        type='CSPNeXtPAFPN',
        in_channels=[96, 192, 384],
        out_channels=96,
        num_csp_blocks=1,
        expand_ratio=0.5,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True)),
    bbox_head=dict(
        type='RTMDetSepBNHead',
        num_classes=10,
        in_channels=96,
        stacked_convs=2,
        feat_channels=96,
        anchor_generator=dict(
            type='MlvlPointGenerator', offset=0, strides=[8, 16, 32]),
        bbox_coder=dict(type='DistancePointBBoxCoder'),
        loss_cls=dict(
            type='QualityFocalLoss',
            use_sigmoid=True,
            beta=2.0,
            loss_weight=1.0),
        loss_bbox=dict(type='GIoULoss', loss_weight=2.0),
        with_objectness=False,
        exp_on_reg=False,
        share_conv=True,
        pred_kernel_size=1,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU', inplace=True)),
    train_cfg=dict(
        assigner=dict(type='DynamicSoftLabelAssigner', topk=13),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    test_cfg=dict(
        nms_pre=30000,
        min_bbox_size=0,
        score_thr=0.001,
        nms=dict(type='nms', iou_threshold=0.65),
        max_per_img=300))
train_pipeline_stage2 = [
    dict(type='LoadImageFromFile', backend_args=None),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        type='RandomResize',
        scale=(640, 640),
        ratio_range=(0.5, 2.0),
        keep_ratio=True),
    dict(type='RandomCrop', crop_size=(640, 640)),
    dict(type='YOLOXHSVRandomAug'),
    dict(type='RandomFlip', prob=0.5),
    dict(type='Pad', size=(640, 640), pad_val=dict(img=(114, 114, 114))),
    dict(type='PackDetInputs')
]
max_epochs = 40
stage2_num_epochs = 20
base_lr = 0.0001875
interval = 10
custom_hooks = [
    dict(
        type='EMAHook',
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        update_buffers=True,
        priority=49),
    dict(
        type='PipelineSwitchHook',
        switch_epoch=35,
        switch_pipeline=[
            dict(type='LoadImageFromFile', backend_args=None),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                type='RandomResize',
                scale=(640, 640),
                ratio_range=(0.5, 2.0),
                keep_ratio=True),
            dict(type='RandomCrop', crop_size=(640, 640)),
            dict(type='YOLOXHSVRandomAug'),
            dict(type='RandomFlip', prob=0.5),
            dict(
                type='Pad', size=(640, 640),
                pad_val=dict(img=(114, 114, 114))),
            dict(type='PackDetInputs')
        ])
]
checkpoint = 'https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth'
metainfo = dict(
    classes=('cola', 'pepsi', 'sprite', 'fanta', 'spring', 'ice', 'scream',
             'milk', 'red', 'king'),
    palette=[(220, 20, 60), (255, 165, 0), (119, 11, 32), (0, 0, 142),
             (29, 123, 243), (101, 205, 228), (240, 128, 128), (154, 205, 50),
             (4, 139, 34), (139, 0, 0)])
num_classes = 10
train_batch_size_per_gpu = 12
train_num_workers = 4
val_batch_size_per_gpu = 1
val_num_workers = 2
num_epochs_stage2 = 5
launcher = 'none'
work_dir = './work_dirs/rtmdet_tiny_1xb12-40e_drink'

2023/06/10 08:49:53 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/06/10 08:49:53 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(49          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_save_checkpoint:
(49          ) EMAHook                            
 -------------------- 
after_train:
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.reduce_layers.0.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.reduce_layers.0.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.reduce_layers.1.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.reduce_layers.1.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.main_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.main_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.short_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.short_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.final_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.final_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.main_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.main_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.short_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.short_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.final_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.final_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.downsamples.0.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.downsamples.0.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.downsamples.1.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.downsamples.1.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.main_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.main_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.short_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.short_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.final_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.final_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.main_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.main_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.short_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.short_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.final_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.final_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.out_convs.0.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.out_convs.0.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.out_convs.1.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.out_convs.1.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.out_convs.2.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- neck.out_convs.2.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.0.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.0.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.1.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.1.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - WARNING - bbox_head.cls_convs.1.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.0.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.0.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - WARNING - bbox_head.cls_convs.1.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.1.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.1.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - WARNING - bbox_head.cls_convs.2.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.0.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.0.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - WARNING - bbox_head.cls_convs.2.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.1.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.1.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.0.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.0.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.1.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.1.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - WARNING - bbox_head.reg_convs.1.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.0.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.0.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - WARNING - bbox_head.reg_convs.1.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.1.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.1.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - WARNING - bbox_head.reg_convs.2.0.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.0.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.0.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - WARNING - bbox_head.reg_convs.2.1.conv is duplicate. It is skipped since bypass_duplicate=True
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.1.bn.weight:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.1.bn.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.0.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.1.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.rtm_cls.2.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.0.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.1.bias:weight_decay=0.0
2023/06/10 08:49:54 - mmengine - INFO - paramwise_options -- bbox_head.rtm_reg.2.bias:weight_decay=0.0
2023/06/10 08:49:55 - mmengine - INFO - load backbone. in model from: https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth
Name of parameter - Initialization information

backbone.stem.0.conv.weight - torch.Size([12, 3, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.0.bn.weight - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.0.bn.bias - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.1.conv.weight - torch.Size([12, 12, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.1.bn.weight - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.1.bn.bias - torch.Size([12]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.2.conv.weight - torch.Size([24, 12, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.2.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stem.2.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.0.conv.weight - torch.Size([48, 24, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.0.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.0.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.main_conv.conv.weight - torch.Size([24, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.main_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.main_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.short_conv.conv.weight - torch.Size([24, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.short_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.short_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.final_conv.conv.weight - torch.Size([48, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.final_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.final_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv1.conv.weight - torch.Size([24, 24, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv1.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv1.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([24, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([24, 24, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([24]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.attention.fc.weight - torch.Size([48, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage1.1.attention.fc.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.0.conv.weight - torch.Size([96, 48, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.0.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.0.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.main_conv.conv.weight - torch.Size([48, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.main_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.main_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.short_conv.conv.weight - torch.Size([48, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.short_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.short_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.final_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.final_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.final_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv1.conv.weight - torch.Size([48, 48, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv1.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv1.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([48, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([48, 48, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([48]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.attention.fc.weight - torch.Size([96, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage2.1.attention.fc.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.0.conv.weight - torch.Size([192, 96, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.0.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.0.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.main_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.main_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.main_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.short_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.short_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.short_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.final_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.final_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.final_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv1.conv.weight - torch.Size([96, 96, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv1.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv1.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.attention.fc.weight - torch.Size([192, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage3.1.attention.fc.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.0.conv.weight - torch.Size([384, 192, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.0.bn.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.0.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv1.conv.weight - torch.Size([192, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv1.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv1.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv2.conv.weight - torch.Size([384, 768, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv2.bn.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.1.conv2.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.main_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.main_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.main_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.short_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.short_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.short_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.final_conv.conv.weight - torch.Size([384, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.final_conv.bn.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.final_conv.bn.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv1.conv.weight - torch.Size([192, 192, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv1.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv1.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.attention.fc.weight - torch.Size([384, 384, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

backbone.stage4.2.attention.fc.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-tiny_imagenet_600e.pth 

neck.reduce_layers.0.conv.weight - torch.Size([192, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.reduce_layers.0.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.0.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.1.conv.weight - torch.Size([96, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.reduce_layers.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.reduce_layers.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.main_conv.conv.weight - torch.Size([96, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.main_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.main_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.short_conv.conv.weight - torch.Size([96, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.short_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.short_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.final_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.final_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.final_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv1.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.main_conv.conv.weight - torch.Size([48, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.main_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.main_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.short_conv.conv.weight - torch.Size([48, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.short_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.short_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.final_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.final_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.final_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv1.conv.weight - torch.Size([48, 48, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv1.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv1.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([48, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([48, 48, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.top_down_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([48]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.0.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.downsamples.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.1.conv.weight - torch.Size([192, 192, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.downsamples.1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.downsamples.1.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.main_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.main_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.main_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.short_conv.conv.weight - torch.Size([96, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.short_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.short_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.final_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.final_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.final_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv1.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([96, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([96, 96, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.0.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.main_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.main_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.main_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.short_conv.conv.weight - torch.Size([192, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.short_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.short_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.final_conv.conv.weight - torch.Size([384, 384, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.final_conv.bn.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.final_conv.bn.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv1.conv.weight - torch.Size([192, 192, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv1.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv1.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([192, 1, 5, 5]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([192, 192, 1, 1]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.bottom_up_blocks.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.0.conv.weight - torch.Size([96, 96, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.1.conv.weight - torch.Size([96, 192, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.2.conv.weight - torch.Size([96, 384, 3, 3]): 
KaimingInit: a=2.23606797749979, mode=fan_in, nonlinearity=leaky_relu, distribution =uniform, bias=0 

neck.out_convs.2.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

neck.out_convs.2.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.0.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.cls_convs.0.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.1.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.cls_convs.0.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.0.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.1.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.cls_convs.2.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.0.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.reg_convs.0.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.1.conv.weight - torch.Size([96, 96, 3, 3]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.reg_convs.0.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.0.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.1.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.0.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.0.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.1.bn.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.reg_convs.2.1.bn.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of RTMDet  

bbox_head.rtm_cls.0.weight - torch.Size([10, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.0.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.1.weight - torch.Size([10, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.1.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.2.weight - torch.Size([10, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_cls.2.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.0.weight - torch.Size([4, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.0.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.1.weight - torch.Size([4, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.1.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.2.weight - torch.Size([4, 96, 1, 1]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  

bbox_head.rtm_reg.2.bias - torch.Size([4]): 
Initialized by user-defined `init_weights` in RTMDetSepBNHead  
2023/06/10 08:49:56 - mmengine - INFO - Load checkpoint from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/rtmdet_tiny_8xb32-300e_coco/rtmdet_tiny_8xb32-300e_coco_20220902_112414-78e30dcc.pth
2023/06/10 08:49:56 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/06/10 08:49:56 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/06/10 08:49:56 - mmengine - INFO - Checkpoints will be saved to /content/mmdetection/work_dirs/rtmdet_tiny_1xb12-40e_drink.
2023/06/10 08:50:32 - mmengine - INFO - Epoch(train)  [1][ 5/19]  lr: 2.5864e-05  eta: 1:30:45  time: 7.2129  data_time: 4.8821  memory: 1623  loss: 2.6515  loss_cls: 1.9262  loss_bbox: 0.7254
2023/06/10 08:50:56 - mmengine - INFO - Epoch(train)  [1][10/19]  lr: 5.8191e-05  eta: 1:15:17  time: 6.0238  data_time: 4.5294  memory: 1623  loss: 2.6711  loss_cls: 1.9581  loss_bbox: 0.7130
2023/06/10 08:51:16 - mmengine - INFO - Epoch(train)  [1][15/19]  lr: 9.0518e-05  eta: 1:06:51  time: 5.3841  data_time: 4.1884  memory: 1623  loss: 2.7084  loss_cls: 2.0163  loss_bbox: 0.6921
2023/06/10 08:51:28 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 08:52:02 - mmengine - INFO - Epoch(train)  [2][ 5/19]  lr: 1.4871e-04  eta: 1:04:21  time: 5.2468  data_time: 4.3182  memory: 1623  loss: 2.7690  loss_cls: 2.1124  loss_bbox: 0.6566
2023/06/10 08:52:27 - mmengine - INFO - Epoch(train)  [2][10/19]  lr: 1.8103e-04  eta: 1:03:44  time: 5.2320  data_time: 4.3026  memory: 1623  loss: 2.7947  loss_cls: 2.1566  loss_bbox: 0.6381
2023/06/10 08:52:45 - mmengine - INFO - Epoch(train)  [2][15/19]  lr: 1.8750e-04  eta: 1:00:20  time: 4.9864  data_time: 4.0913  memory: 1623  loss: 2.8123  loss_cls: 2.1942  loss_bbox: 0.6181
2023/06/10 08:52:53 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 08:53:26 - mmengine - INFO - Epoch(train)  [3][ 5/19]  lr: 1.8750e-04  eta: 0:58:32  time: 4.8992  data_time: 4.0618  memory: 1623  loss: 2.8182  loss_cls: 2.2358  loss_bbox: 0.5823
2023/06/10 08:53:45 - mmengine - INFO - Epoch(train)  [3][10/19]  lr: 1.8750e-04  eta: 0:56:45  time: 4.7827  data_time: 3.9411  memory: 1623  loss: 2.8004  loss_cls: 2.2374  loss_bbox: 0.5630
2023/06/10 08:54:07 - mmengine - INFO - Epoch(train)  [3][15/19]  lr: 1.8750e-04  eta: 0:55:53  time: 4.5261  data_time: 3.8487  memory: 1623  loss: 2.7626  loss_cls: 2.2313  loss_bbox: 0.5313
2023/06/10 08:54:17 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 08:54:58 - mmengine - INFO - Epoch(train)  [4][ 5/19]  lr: 1.8750e-04  eta: 0:56:43  time: 4.8160  data_time: 4.1614  memory: 1623  loss: 2.6323  loss_cls: 2.1629  loss_bbox: 0.4695
2023/06/10 08:55:17 - mmengine - INFO - Epoch(train)  [4][10/19]  lr: 1.8750e-04  eta: 0:55:24  time: 4.6155  data_time: 3.9448  memory: 1623  loss: 2.5181  loss_cls: 2.0787  loss_bbox: 0.4394
2023/06/10 08:55:34 - mmengine - INFO - Epoch(train)  [4][15/19]  lr: 1.8750e-04  eta: 0:53:52  time: 4.4998  data_time: 3.8212  memory: 1623  loss: 2.3831  loss_cls: 1.9723  loss_bbox: 0.4108
2023/06/10 08:55:46 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 08:56:20 - mmengine - INFO - Epoch(train)  [5][ 5/19]  lr: 1.8750e-04  eta: 0:53:41  time: 4.6162  data_time: 4.0079  memory: 1623  loss: 2.1111  loss_cls: 1.7484  loss_bbox: 0.3627
2023/06/10 08:56:38 - mmengine - INFO - Epoch(train)  [5][10/19]  lr: 1.8750e-04  eta: 0:52:35  time: 4.5711  data_time: 3.9539  memory: 1623  loss: 1.9546  loss_cls: 1.6079  loss_bbox: 0.3467
2023/06/10 08:56:58 - mmengine - INFO - Epoch(train)  [5][15/19]  lr: 1.8750e-04  eta: 0:51:46  time: 4.4763  data_time: 3.8531  memory: 1623  loss: 1.8076  loss_cls: 1.4750  loss_bbox: 0.3326
2023/06/10 08:57:10 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 08:57:53 - mmengine - INFO - Epoch(train)  [6][ 5/19]  lr: 1.8750e-04  eta: 0:52:29  time: 4.8252  data_time: 4.2273  memory: 1623  loss: 1.5555  loss_cls: 1.2460  loss_bbox: 0.3095
2023/06/10 08:58:11 - mmengine - INFO - Epoch(train)  [6][10/19]  lr: 1.8750e-04  eta: 0:51:29  time: 4.7271  data_time: 4.1249  memory: 1623  loss: 1.4621  loss_cls: 1.1616  loss_bbox: 0.3005
2023/06/10 08:58:29 - mmengine - INFO - Epoch(train)  [6][15/19]  lr: 1.8750e-04  eta: 0:50:35  time: 4.5540  data_time: 3.9426  memory: 1623  loss: 1.3878  loss_cls: 1.0949  loss_bbox: 0.2929
2023/06/10 08:58:39 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 08:59:16 - mmengine - INFO - Epoch(train)  [7][ 5/19]  lr: 1.8750e-04  eta: 0:50:15  time: 4.7404  data_time: 4.1367  memory: 1623  loss: 1.2824  loss_cls: 1.0020  loss_bbox: 0.2804
2023/06/10 08:59:35 - mmengine - INFO - Epoch(train)  [7][10/19]  lr: 1.8750e-04  eta: 0:49:31  time: 4.6180  data_time: 3.9953  memory: 1623  loss: 1.2417  loss_cls: 0.9657  loss_bbox: 0.2760
2023/06/10 08:59:54 - mmengine - INFO - Epoch(train)  [7][15/19]  lr: 1.8750e-04  eta: 0:48:44  time: 4.5632  data_time: 3.9258  memory: 1623  loss: 1.2126  loss_cls: 0.9404  loss_bbox: 0.2722
2023/06/10 09:00:04 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:00:40 - mmengine - INFO - Epoch(train)  [8][ 5/19]  lr: 1.8750e-04  eta: 0:48:22  time: 4.7421  data_time: 4.1371  memory: 1623  loss: 1.1538  loss_cls: 0.8880  loss_bbox: 0.2659
2023/06/10 09:00:58 - mmengine - INFO - Epoch(train)  [8][10/19]  lr: 1.8750e-04  eta: 0:47:39  time: 4.5823  data_time: 3.9744  memory: 1623  loss: 1.1204  loss_cls: 0.8615  loss_bbox: 0.2589
2023/06/10 09:01:17 - mmengine - INFO - Epoch(train)  [8][15/19]  lr: 1.8750e-04  eta: 0:46:55  time: 4.4702  data_time: 3.8500  memory: 1623  loss: 1.0938  loss_cls: 0.8374  loss_bbox: 0.2564
2023/06/10 09:01:28 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:02:02 - mmengine - INFO - Epoch(train)  [9][ 5/19]  lr: 1.8750e-04  eta: 0:46:31  time: 4.5975  data_time: 4.0318  memory: 1623  loss: 1.0500  loss_cls: 0.7988  loss_bbox: 0.2512
2023/06/10 09:02:19 - mmengine - INFO - Epoch(train)  [9][10/19]  lr: 1.8750e-04  eta: 0:45:44  time: 4.4266  data_time: 3.8299  memory: 1623  loss: 1.0283  loss_cls: 0.7816  loss_bbox: 0.2467
2023/06/10 09:02:41 - mmengine - INFO - Epoch(train)  [9][15/19]  lr: 1.8750e-04  eta: 0:45:16  time: 4.4173  data_time: 3.7923  memory: 1623  loss: 1.0065  loss_cls: 0.7624  loss_bbox: 0.2441
2023/06/10 09:02:52 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:03:28 - mmengine - INFO - Epoch(train) [10][ 5/19]  lr: 1.8750e-04  eta: 0:44:56  time: 4.6403  data_time: 4.0267  memory: 1623  loss: 0.9692  loss_cls: 0.7321  loss_bbox: 0.2371
2023/06/10 09:03:49 - mmengine - INFO - Epoch(train) [10][10/19]  lr: 1.8750e-04  eta: 0:44:26  time: 4.5551  data_time: 3.9073  memory: 1623  loss: 0.9543  loss_cls: 0.7191  loss_bbox: 0.2353
2023/06/10 09:04:08 - mmengine - INFO - Epoch(train) [10][15/19]  lr: 1.8750e-04  eta: 0:43:50  time: 4.4777  data_time: 3.8183  memory: 1623  loss: 0.9389  loss_cls: 0.7066  loss_bbox: 0.2323
2023/06/10 09:04:18 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:04:18 - mmengine - INFO - Saving checkpoint at 10 epochs
2023/06/10 09:04:22 - mmengine - INFO - Epoch(val) [10][ 5/56]    eta: 0:00:14  time: 0.2925  data_time: 0.1682  memory: 1623  
2023/06/10 09:04:22 - mmengine - INFO - Epoch(val) [10][10/56]    eta: 0:00:10  time: 0.2231  data_time: 0.1311  memory: 218  
2023/06/10 09:04:24 - mmengine - INFO - Epoch(val) [10][15/56]    eta: 0:00:09  time: 0.2258  data_time: 0.1472  memory: 218  
2023/06/10 09:04:24 - mmengine - INFO - Epoch(val) [10][20/56]    eta: 0:00:07  time: 0.2030  data_time: 0.1348  memory: 218  
2023/06/10 09:04:25 - mmengine - INFO - Epoch(val) [10][25/56]    eta: 0:00:06  time: 0.1956  data_time: 0.1302  memory: 218  
2023/06/10 09:04:26 - mmengine - INFO - Epoch(val) [10][30/56]    eta: 0:00:05  time: 0.2008  data_time: 0.1358  memory: 218  
2023/06/10 09:04:27 - mmengine - INFO - Epoch(val) [10][35/56]    eta: 0:00:04  time: 0.1969  data_time: 0.1324  memory: 218  
2023/06/10 09:04:28 - mmengine - INFO - Epoch(val) [10][40/56]    eta: 0:00:03  time: 0.1902  data_time: 0.1279  memory: 218  
2023/06/10 09:04:29 - mmengine - INFO - Epoch(val) [10][45/56]    eta: 0:00:02  time: 0.1943  data_time: 0.1336  memory: 218  
2023/06/10 09:04:30 - mmengine - INFO - Epoch(val) [10][50/56]    eta: 0:00:01  time: 0.2041  data_time: 0.1399  memory: 218  
2023/06/10 09:04:32 - mmengine - INFO - Epoch(val) [10][55/56]    eta: 0:00:00  time: 0.2030  data_time: 0.1426  memory: 218  
2023/06/10 09:04:33 - mmengine - INFO - Evaluating bbox...
2023/06/10 09:04:34 - mmengine - INFO - bbox_mAP_copypaste: 0.667 0.748 0.740 -1.000 -1.000 0.667
2023/06/10 09:04:34 - mmengine - INFO - Epoch(val) [10][56/56]    coco/bbox_mAP: 0.6670  coco/bbox_mAP_50: 0.7480  coco/bbox_mAP_75: 0.7400  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.6670  data_time: 0.1468  time: 0.2126
2023/06/10 09:04:35 - mmengine - INFO - The best checkpoint with 0.6670 coco/bbox_mAP at 10 epoch is saved to best_coco_bbox_mAP_epoch_10.pth.
2023/06/10 09:05:16 - mmengine - INFO - Epoch(train) [11][ 5/19]  lr: 1.8750e-04  eta: 0:43:24  time: 4.6939  data_time: 4.0453  memory: 1623  loss: 0.9163  loss_cls: 0.6882  loss_bbox: 0.2282
2023/06/10 09:05:35 - mmengine - INFO - Epoch(train) [11][10/19]  lr: 1.8750e-04  eta: 0:42:51  time: 4.5342  data_time: 3.8633  memory: 1623  loss: 0.9042  loss_cls: 0.6764  loss_bbox: 0.2278
2023/06/10 09:05:54 - mmengine - INFO - Epoch(train) [11][15/19]  lr: 1.8750e-04  eta: 0:42:18  time: 4.5294  data_time: 3.8172  memory: 1623  loss: 0.8982  loss_cls: 0.6713  loss_bbox: 0.2269
2023/06/10 09:06:04 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:06:38 - mmengine - INFO - Epoch(train) [12][ 5/19]  lr: 1.8750e-04  eta: 0:41:44  time: 4.6515  data_time: 3.9652  memory: 1623  loss: 0.8748  loss_cls: 0.6515  loss_bbox: 0.2233
2023/06/10 09:07:02 - mmengine - INFO - Epoch(train) [12][10/19]  lr: 1.8750e-04  eta: 0:41:22  time: 4.6035  data_time: 3.8968  memory: 1623  loss: 0.8634  loss_cls: 0.6429  loss_bbox: 0.2205
2023/06/10 09:07:20 - mmengine - INFO - Epoch(train) [12][15/19]  lr: 1.8750e-04  eta: 0:40:47  time: 4.4783  data_time: 3.7511  memory: 1623  loss: 0.8519  loss_cls: 0.6319  loss_bbox: 0.2200
2023/06/10 09:07:30 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:08:01 - mmengine - INFO - Epoch(train) [13][ 5/19]  lr: 1.8750e-04  eta: 0:40:07  time: 4.5689  data_time: 3.8587  memory: 1623  loss: 0.8380  loss_cls: 0.6178  loss_bbox: 0.2202
2023/06/10 09:08:23 - mmengine - INFO - Epoch(train) [13][10/19]  lr: 1.8750e-04  eta: 0:39:42  time: 4.5134  data_time: 3.7713  memory: 1623  loss: 0.8251  loss_cls: 0.6064  loss_bbox: 0.2187
2023/06/10 09:08:42 - mmengine - INFO - Epoch(train) [13][15/19]  lr: 1.8750e-04  eta: 0:39:12  time: 4.4600  data_time: 3.6996  memory: 1623  loss: 0.8106  loss_cls: 0.5941  loss_bbox: 0.2165
2023/06/10 09:08:55 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:09:31 - mmengine - INFO - Epoch(train) [14][ 5/19]  lr: 1.8750e-04  eta: 0:38:46  time: 4.6720  data_time: 3.9656  memory: 1623  loss: 0.7801  loss_cls: 0.5687  loss_bbox: 0.2115
2023/06/10 09:09:50 - mmengine - INFO - Epoch(train) [14][10/19]  lr: 1.8750e-04  eta: 0:38:17  time: 4.5413  data_time: 3.8475  memory: 1623  loss: 0.7678  loss_cls: 0.5576  loss_bbox: 0.2102
2023/06/10 09:10:10 - mmengine - INFO - Epoch(train) [14][15/19]  lr: 1.8750e-04  eta: 0:37:48  time: 4.5174  data_time: 3.8291  memory: 1623  loss: 0.7613  loss_cls: 0.5504  loss_bbox: 0.2109
2023/06/10 09:10:22 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:10:56 - mmengine - INFO - Epoch(train) [15][ 5/19]  lr: 1.8750e-04  eta: 0:37:16  time: 4.6605  data_time: 4.0499  memory: 1623  loss: 0.7407  loss_cls: 0.5328  loss_bbox: 0.2079
2023/06/10 09:11:15 - mmengine - INFO - Epoch(train) [15][10/19]  lr: 1.8750e-04  eta: 0:36:47  time: 4.5229  data_time: 3.9178  memory: 1623  loss: 0.7309  loss_cls: 0.5242  loss_bbox: 0.2067
2023/06/10 09:11:34 - mmengine - INFO - Epoch(train) [15][15/19]  lr: 1.8750e-04  eta: 0:36:17  time: 4.5106  data_time: 3.8989  memory: 1623  loss: 0.7256  loss_cls: 0.5188  loss_bbox: 0.2068
2023/06/10 09:11:45 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:12:27 - mmengine - INFO - Epoch(train) [16][ 5/19]  lr: 1.8750e-04  eta: 0:35:55  time: 4.8232  data_time: 4.2179  memory: 1623  loss: 0.6992  loss_cls: 0.4962  loss_bbox: 0.2030
2023/06/10 09:12:47 - mmengine - INFO - Epoch(train) [16][10/19]  lr: 1.8750e-04  eta: 0:35:28  time: 4.6528  data_time: 4.0467  memory: 1623  loss: 0.6948  loss_cls: 0.4907  loss_bbox: 0.2041
2023/06/10 09:13:05 - mmengine - INFO - Epoch(train) [16][15/19]  lr: 1.8750e-04  eta: 0:34:57  time: 4.6044  data_time: 3.9696  memory: 1623  loss: 0.6954  loss_cls: 0.4903  loss_bbox: 0.2051
2023/06/10 09:13:14 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:13:46 - mmengine - INFO - Epoch(train) [17][ 5/19]  lr: 1.8750e-04  eta: 0:34:16  time: 4.6793  data_time: 4.0480  memory: 1623  loss: 0.6757  loss_cls: 0.4746  loss_bbox: 0.2011
2023/06/10 09:14:07 - mmengine - INFO - Epoch(train) [17][10/19]  lr: 1.8750e-04  eta: 0:33:51  time: 4.5219  data_time: 3.8661  memory: 1623  loss: 0.6667  loss_cls: 0.4672  loss_bbox: 0.1995
2023/06/10 09:14:30 - mmengine - INFO - Epoch(train) [17][15/19]  lr: 1.8750e-04  eta: 0:33:29  time: 4.5501  data_time: 3.8643  memory: 1623  loss: 0.6613  loss_cls: 0.4616  loss_bbox: 0.1997
2023/06/10 09:14:40 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:15:19 - mmengine - INFO - Epoch(train) [18][ 5/19]  lr: 1.8750e-04  eta: 0:32:58  time: 4.8334  data_time: 4.1500  memory: 1623  loss: 0.6509  loss_cls: 0.4549  loss_bbox: 0.1960
2023/06/10 09:15:38 - mmengine - INFO - Epoch(train) [18][10/19]  lr: 1.8750e-04  eta: 0:32:30  time: 4.7026  data_time: 3.9743  memory: 1623  loss: 0.6454  loss_cls: 0.4501  loss_bbox: 0.1954
2023/06/10 09:15:56 - mmengine - INFO - Epoch(train) [18][15/19]  lr: 1.8750e-04  eta: 0:32:02  time: 4.5808  data_time: 3.8392  memory: 1623  loss: 0.6379  loss_cls: 0.4440  loss_bbox: 0.1939
2023/06/10 09:16:04 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:16:46 - mmengine - INFO - Epoch(train) [19][ 5/19]  lr: 1.8750e-04  eta: 0:31:32  time: 4.7621  data_time: 4.0383  memory: 1623  loss: 0.6379  loss_cls: 0.4418  loss_bbox: 0.1960
2023/06/10 09:17:07 - mmengine - INFO - Epoch(train) [19][10/19]  lr: 1.8750e-04  eta: 0:31:06  time: 4.6650  data_time: 3.9357  memory: 1623  loss: 0.6307  loss_cls: 0.4355  loss_bbox: 0.1951
2023/06/10 09:17:25 - mmengine - INFO - Epoch(train) [19][15/19]  lr: 1.8750e-04  eta: 0:30:38  time: 4.6285  data_time: 3.9031  memory: 1623  loss: 0.6221  loss_cls: 0.4272  loss_bbox: 0.1949
2023/06/10 09:17:32 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:18:08 - mmengine - INFO - Epoch(train) [20][ 5/19]  lr: 1.8750e-04  eta: 0:29:59  time: 4.6704  data_time: 3.9884  memory: 1623  loss: 0.6210  loss_cls: 0.4247  loss_bbox: 0.1963
2023/06/10 09:18:30 - mmengine - INFO - Epoch(train) [20][10/19]  lr: 1.8750e-04  eta: 0:29:35  time: 4.6371  data_time: 3.9391  memory: 1623  loss: 0.6085  loss_cls: 0.4150  loss_bbox: 0.1935
2023/06/10 09:18:45 - mmengine - INFO - Epoch(train) [20][15/19]  lr: 1.8750e-04  eta: 0:29:04  time: 4.4619  data_time: 3.7582  memory: 1623  loss: 0.6014  loss_cls: 0.4072  loss_bbox: 0.1942
2023/06/10 09:18:55 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:18:55 - mmengine - INFO - Saving checkpoint at 20 epochs
2023/06/10 09:18:58 - mmengine - INFO - Epoch(val) [20][ 5/56]    eta: 0:00:12  time: 0.2114  data_time: 0.1491  memory: 1623  
2023/06/10 09:18:59 - mmengine - INFO - Epoch(val) [20][10/56]    eta: 0:00:09  time: 0.2122  data_time: 0.1487  memory: 218  
2023/06/10 09:19:00 - mmengine - INFO - Epoch(val) [20][15/56]    eta: 0:00:08  time: 0.2149  data_time: 0.1501  memory: 218  
2023/06/10 09:19:01 - mmengine - INFO - Epoch(val) [20][20/56]    eta: 0:00:07  time: 0.2123  data_time: 0.1476  memory: 218  
2023/06/10 09:19:02 - mmengine - INFO - Epoch(val) [20][25/56]    eta: 0:00:05  time: 0.2120  data_time: 0.1483  memory: 218  
2023/06/10 09:19:03 - mmengine - INFO - Epoch(val) [20][30/56]    eta: 0:00:05  time: 0.2158  data_time: 0.1533  memory: 218  
2023/06/10 09:19:04 - mmengine - INFO - Epoch(val) [20][35/56]    eta: 0:00:03  time: 0.2106  data_time: 0.1479  memory: 218  
2023/06/10 09:19:05 - mmengine - INFO - Epoch(val) [20][40/56]    eta: 0:00:03  time: 0.2141  data_time: 0.1518  memory: 218  
2023/06/10 09:19:06 - mmengine - INFO - Epoch(val) [20][45/56]    eta: 0:00:02  time: 0.2086  data_time: 0.1461  memory: 218  
2023/06/10 09:19:08 - mmengine - INFO - Epoch(val) [20][50/56]    eta: 0:00:01  time: 0.2174  data_time: 0.1529  memory: 218  
2023/06/10 09:19:09 - mmengine - INFO - Epoch(val) [20][55/56]    eta: 0:00:00  time: 0.2142  data_time: 0.1482  memory: 218  
2023/06/10 09:19:10 - mmengine - INFO - Evaluating bbox...
2023/06/10 09:19:10 - mmengine - INFO - bbox_mAP_copypaste: 0.911 0.984 0.983 -1.000 -1.000 0.911
2023/06/10 09:19:10 - mmengine - INFO - Epoch(val) [20][56/56]    coco/bbox_mAP: 0.9110  coco/bbox_mAP_50: 0.9840  coco/bbox_mAP_75: 0.9830  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.9110  data_time: 0.1540  time: 0.2203
2023/06/10 09:19:10 - mmengine - INFO - The previous best checkpoint /content/mmdetection/work_dirs/rtmdet_tiny_1xb12-40e_drink/best_coco_bbox_mAP_epoch_10.pth is removed
2023/06/10 09:19:12 - mmengine - INFO - The best checkpoint with 0.9110 coco/bbox_mAP at 20 epoch is saved to best_coco_bbox_mAP_epoch_20.pth.
2023/06/10 09:19:50 - mmengine - INFO - Epoch(train) [21][ 5/19]  lr: 1.8745e-04  eta: 0:28:29  time: 4.6436  data_time: 4.0454  memory: 1623  loss: 0.5935  loss_cls: 0.3991  loss_bbox: 0.1944
2023/06/10 09:20:06 - mmengine - INFO - Epoch(train) [21][10/19]  lr: 1.8725e-04  eta: 0:28:00  time: 4.4800  data_time: 3.8833  memory: 1623  loss: 0.5924  loss_cls: 0.3975  loss_bbox: 0.1949
2023/06/10 09:20:26 - mmengine - INFO - Epoch(train) [21][15/19]  lr: 1.8690e-04  eta: 0:27:35  time: 4.3408  data_time: 3.7451  memory: 1623  loss: 0.5847  loss_cls: 0.3904  loss_bbox: 0.1943
2023/06/10 09:20:38 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:21:12 - mmengine - INFO - Epoch(train) [22][ 5/19]  lr: 1.8589e-04  eta: 0:26:59  time: 4.5365  data_time: 3.9692  memory: 1623  loss: 0.5771  loss_cls: 0.3849  loss_bbox: 0.1922
2023/06/10 09:21:32 - mmengine - INFO - Epoch(train) [22][10/19]  lr: 1.8512e-04  eta: 0:26:34  time: 4.4637  data_time: 3.8694  memory: 1623  loss: 0.5726  loss_cls: 0.3809  loss_bbox: 0.1917
2023/06/10 09:21:50 - mmengine - INFO - Epoch(train) [22][15/19]  lr: 1.8421e-04  eta: 0:26:07  time: 4.3703  data_time: 3.7438  memory: 1623  loss: 0.5698  loss_cls: 0.3775  loss_bbox: 0.1923
2023/06/10 09:22:02 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:22:40 - mmengine - INFO - Epoch(train) [23][ 5/19]  lr: 1.8218e-04  eta: 0:25:33  time: 4.6133  data_time: 4.0050  memory: 1623  loss: 0.5771  loss_cls: 0.3811  loss_bbox: 0.1961
2023/06/10 09:22:59 - mmengine - INFO - Epoch(train) [23][10/19]  lr: 1.8086e-04  eta: 0:25:07  time: 4.5122  data_time: 3.8495  memory: 1623  loss: 0.5714  loss_cls: 0.3763  loss_bbox: 0.1951
2023/06/10 09:23:17 - mmengine - INFO - Epoch(train) [23][15/19]  lr: 1.7940e-04  eta: 0:24:41  time: 4.4457  data_time: 3.7655  memory: 1623  loss: 0.5643  loss_cls: 0.3705  loss_bbox: 0.1938
2023/06/10 09:23:28 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:24:03 - mmengine - INFO - Epoch(train) [24][ 5/19]  lr: 1.7641e-04  eta: 0:24:05  time: 4.6517  data_time: 3.9650  memory: 1623  loss: 0.5608  loss_cls: 0.3668  loss_bbox: 0.1941
2023/06/10 09:24:22 - mmengine - INFO - Epoch(train) [24][10/19]  lr: 1.7457e-04  eta: 0:23:39  time: 4.4918  data_time: 3.7969  memory: 1623  loss: 0.5564  loss_cls: 0.3639  loss_bbox: 0.1925
2023/06/10 09:24:40 - mmengine - INFO - Epoch(train) [24][15/19]  lr: 1.7259e-04  eta: 0:23:13  time: 4.4292  data_time: 3.7157  memory: 1623  loss: 0.5476  loss_cls: 0.3566  loss_bbox: 0.1910
2023/06/10 09:24:52 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:25:28 - mmengine - INFO - Epoch(train) [25][ 5/19]  lr: 1.6872e-04  eta: 0:22:37  time: 4.6689  data_time: 4.0048  memory: 1623  loss: 0.5400  loss_cls: 0.3509  loss_bbox: 0.1892
2023/06/10 09:25:50 - mmengine - INFO - Epoch(train) [25][10/19]  lr: 1.6640e-04  eta: 0:22:14  time: 4.5939  data_time: 3.9304  memory: 1623  loss: 0.5410  loss_cls: 0.3503  loss_bbox: 0.1908
2023/06/10 09:26:09 - mmengine - INFO - Epoch(train) [25][15/19]  lr: 1.6396e-04  eta: 0:21:49  time: 4.5627  data_time: 3.8901  memory: 1623  loss: 0.5350  loss_cls: 0.3455  loss_bbox: 0.1895
2023/06/10 09:26:18 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:26:54 - mmengine - INFO - Epoch(train) [26][ 5/19]  lr: 1.5930e-04  eta: 0:21:11  time: 4.6733  data_time: 4.0764  memory: 1623  loss: 0.5295  loss_cls: 0.3414  loss_bbox: 0.1881
2023/06/10 09:27:11 - mmengine - INFO - Epoch(train) [26][10/19]  lr: 1.5656e-04  eta: 0:20:45  time: 4.4674  data_time: 3.8587  memory: 1623  loss: 0.5303  loss_cls: 0.3409  loss_bbox: 0.1893
2023/06/10 09:27:29 - mmengine - INFO - Epoch(train) [26][15/19]  lr: 1.5372e-04  eta: 0:20:20  time: 4.4381  data_time: 3.8291  memory: 1623  loss: 0.5276  loss_cls: 0.3383  loss_bbox: 0.1893
2023/06/10 09:27:41 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:28:15 - mmengine - INFO - Epoch(train) [27][ 5/19]  lr: 1.4838e-04  eta: 0:19:42  time: 4.6286  data_time: 4.0509  memory: 1623  loss: 0.5130  loss_cls: 0.3276  loss_bbox: 0.1855
2023/06/10 09:28:33 - mmengine - INFO - Epoch(train) [27][10/19]  lr: 1.4529e-04  eta: 0:19:17  time: 4.4413  data_time: 3.8523  memory: 1623  loss: 0.5164  loss_cls: 0.3298  loss_bbox: 0.1867
2023/06/10 09:28:54 - mmengine - INFO - Epoch(train) [27][15/19]  lr: 1.4212e-04  eta: 0:18:54  time: 4.4602  data_time: 3.8313  memory: 1623  loss: 0.5139  loss_cls: 0.3275  loss_bbox: 0.1864
2023/06/10 09:29:06 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:29:37 - mmengine - INFO - Epoch(train) [28][ 5/19]  lr: 1.3623e-04  eta: 0:18:14  time: 4.5257  data_time: 3.9052  memory: 1623  loss: 0.5065  loss_cls: 0.3236  loss_bbox: 0.1829
2023/06/10 09:30:01 - mmengine - INFO - Epoch(train) [28][10/19]  lr: 1.3286e-04  eta: 0:17:52  time: 4.4684  data_time: 3.8179  memory: 1623  loss: 0.5041  loss_cls: 0.3217  loss_bbox: 0.1824
2023/06/10 09:30:20 - mmengine - INFO - Epoch(train) [28][15/19]  lr: 1.2944e-04  eta: 0:17:27  time: 4.4335  data_time: 3.7580  memory: 1623  loss: 0.5001  loss_cls: 0.3188  loss_bbox: 0.1813
2023/06/10 09:30:31 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:31:05 - mmengine - INFO - Epoch(train) [29][ 5/19]  lr: 1.2314e-04  eta: 0:16:49  time: 4.6241  data_time: 3.9635  memory: 1623  loss: 0.4951  loss_cls: 0.3152  loss_bbox: 0.1799
2023/06/10 09:31:23 - mmengine - INFO - Epoch(train) [29][10/19]  lr: 1.1959e-04  eta: 0:16:24  time: 4.4795  data_time: 3.8164  memory: 1623  loss: 0.4923  loss_cls: 0.3140  loss_bbox: 0.1783
2023/06/10 09:31:43 - mmengine - INFO - Epoch(train) [29][15/19]  lr: 1.1599e-04  eta: 0:16:01  time: 4.4764  data_time: 3.7961  memory: 1623  loss: 0.5024  loss_cls: 0.3210  loss_bbox: 0.1814
2023/06/10 09:31:55 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:32:31 - mmengine - INFO - Epoch(train) [30][ 5/19]  lr: 1.0945e-04  eta: 0:15:23  time: 4.6541  data_time: 4.0226  memory: 1623  loss: 0.4906  loss_cls: 0.3128  loss_bbox: 0.1778
2023/06/10 09:32:49 - mmengine - INFO - Epoch(train) [30][10/19]  lr: 1.0579e-04  eta: 0:14:59  time: 4.4801  data_time: 3.8539  memory: 1623  loss: 0.4841  loss_cls: 0.3065  loss_bbox: 0.1776
2023/06/10 09:33:06 - mmengine - INFO - Epoch(train) [30][15/19]  lr: 1.0212e-04  eta: 0:14:34  time: 4.4185  data_time: 3.7961  memory: 1623  loss: 0.4815  loss_cls: 0.3043  loss_bbox: 0.1772
2023/06/10 09:33:19 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:33:19 - mmengine - INFO - Saving checkpoint at 30 epochs
2023/06/10 09:33:22 - mmengine - INFO - Epoch(val) [30][ 5/56]    eta: 0:00:12  time: 0.2251  data_time: 0.1592  memory: 1623  
2023/06/10 09:33:23 - mmengine - INFO - Epoch(val) [30][10/56]    eta: 0:00:09  time: 0.2251  data_time: 0.1590  memory: 218  
2023/06/10 09:33:23 - mmengine - INFO - Epoch(val) [30][15/56]    eta: 0:00:08  time: 0.2272  data_time: 0.1602  memory: 218  
2023/06/10 09:33:24 - mmengine - INFO - Epoch(val) [30][20/56]    eta: 0:00:07  time: 0.2242  data_time: 0.1554  memory: 218  
2023/06/10 09:33:26 - mmengine - INFO - Epoch(val) [30][25/56]    eta: 0:00:07  time: 0.2393  data_time: 0.1667  memory: 218  
2023/06/10 09:33:28 - mmengine - INFO - Epoch(val) [30][30/56]    eta: 0:00:06  time: 0.2602  data_time: 0.1815  memory: 218  
2023/06/10 09:33:29 - mmengine - INFO - Epoch(val) [30][35/56]    eta: 0:00:05  time: 0.2634  data_time: 0.1842  memory: 218  
2023/06/10 09:33:30 - mmengine - INFO - Epoch(val) [30][40/56]    eta: 0:00:03  time: 0.2512  data_time: 0.1767  memory: 218  
2023/06/10 09:33:31 - mmengine - INFO - Epoch(val) [30][45/56]    eta: 0:00:02  time: 0.2365  data_time: 0.1664  memory: 218  
2023/06/10 09:33:32 - mmengine - INFO - Epoch(val) [30][50/56]    eta: 0:00:01  time: 0.2334  data_time: 0.1669  memory: 218  
2023/06/10 09:33:33 - mmengine - INFO - Epoch(val) [30][55/56]    eta: 0:00:00  time: 0.2232  data_time: 0.1586  memory: 218  
2023/06/10 09:33:33 - mmengine - INFO - Evaluating bbox...
2023/06/10 09:33:34 - mmengine - INFO - bbox_mAP_copypaste: 0.931 0.995 0.995 -1.000 -1.000 0.931
2023/06/10 09:33:34 - mmengine - INFO - Epoch(val) [30][56/56]    coco/bbox_mAP: 0.9310  coco/bbox_mAP_50: 0.9950  coco/bbox_mAP_75: 0.9950  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.9310  data_time: 0.1625  time: 0.2264
2023/06/10 09:33:34 - mmengine - INFO - The previous best checkpoint /content/mmdetection/work_dirs/rtmdet_tiny_1xb12-40e_drink/best_coco_bbox_mAP_epoch_20.pth is removed
2023/06/10 09:33:36 - mmengine - INFO - The best checkpoint with 0.9310 coco/bbox_mAP at 30 epoch is saved to best_coco_bbox_mAP_epoch_30.pth.
2023/06/10 09:34:12 - mmengine - INFO - Epoch(train) [31][ 5/19]  lr: 9.5493e-05  eta: 0:13:56  time: 4.6017  data_time: 4.0196  memory: 1623  loss: 0.4847  loss_cls: 0.3064  loss_bbox: 0.1783
2023/06/10 09:34:31 - mmengine - INFO - Epoch(train) [31][10/19]  lr: 9.1817e-05  eta: 0:13:32  time: 4.5529  data_time: 3.9287  memory: 1623  loss: 0.4851  loss_cls: 0.3054  loss_bbox: 0.1797
2023/06/10 09:34:50 - mmengine - INFO - Epoch(train) [31][15/19]  lr: 8.8152e-05  eta: 0:13:08  time: 4.4484  data_time: 3.7997  memory: 1623  loss: 0.4808  loss_cls: 0.3026  loss_bbox: 0.1782
2023/06/10 09:34:59 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:35:37 - mmengine - INFO - Epoch(train) [32][ 5/19]  lr: 8.1604e-05  eta: 0:12:29  time: 4.6477  data_time: 4.0125  memory: 1623  loss: 0.4767  loss_cls: 0.2979  loss_bbox: 0.1787
2023/06/10 09:35:57 - mmengine - INFO - Epoch(train) [32][10/19]  lr: 7.8004e-05  eta: 0:12:06  time: 4.4912  data_time: 3.8145  memory: 1623  loss: 0.4705  loss_cls: 0.2938  loss_bbox: 0.1767
2023/06/10 09:36:16 - mmengine - INFO - Epoch(train) [32][15/19]  lr: 7.4440e-05  eta: 0:11:43  time: 4.4556  data_time: 3.7399  memory: 1623  loss: 0.4749  loss_cls: 0.2968  loss_bbox: 0.1781
2023/06/10 09:36:24 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:37:06 - mmengine - INFO - Epoch(train) [33][ 5/19]  lr: 6.8130e-05  eta: 0:11:04  time: 4.7375  data_time: 4.0431  memory: 1623  loss: 0.4774  loss_cls: 0.2995  loss_bbox: 0.1778
2023/06/10 09:37:26 - mmengine - INFO - Epoch(train) [33][10/19]  lr: 6.4695e-05  eta: 0:10:41  time: 4.5813  data_time: 3.8644  memory: 1623  loss: 0.4740  loss_cls: 0.2963  loss_bbox: 0.1776
2023/06/10 09:37:43 - mmengine - INFO - Epoch(train) [33][15/19]  lr: 6.1318e-05  eta: 0:10:17  time: 4.4900  data_time: 3.7689  memory: 1623  loss: 0.4713  loss_cls: 0.2937  loss_bbox: 0.1776
2023/06/10 09:37:51 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:38:29 - mmengine - INFO - Epoch(train) [34][ 5/19]  lr: 5.5402e-05  eta: 0:09:38  time: 4.6957  data_time: 4.0513  memory: 1623  loss: 0.4672  loss_cls: 0.2904  loss_bbox: 0.1767
2023/06/10 09:38:48 - mmengine - INFO - Epoch(train) [34][10/19]  lr: 5.2217e-05  eta: 0:09:15  time: 4.5722  data_time: 3.9316  memory: 1623  loss: 0.4617  loss_cls: 0.2867  loss_bbox: 0.1750
2023/06/10 09:39:05 - mmengine - INFO - Epoch(train) [34][15/19]  lr: 4.9110e-05  eta: 0:08:51  time: 4.4686  data_time: 3.8212  memory: 1623  loss: 0.4638  loss_cls: 0.2886  loss_bbox: 0.1751
2023/06/10 09:39:15 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:39:54 - mmengine - INFO - Epoch(train) [35][ 5/19]  lr: 4.3734e-05  eta: 0:08:12  time: 4.6952  data_time: 4.1211  memory: 1623  loss: 0.4547  loss_cls: 0.2808  loss_bbox: 0.1739
2023/06/10 09:40:13 - mmengine - INFO - Epoch(train) [35][10/19]  lr: 4.0876e-05  eta: 0:07:49  time: 4.5868  data_time: 3.9698  memory: 1623  loss: 0.4539  loss_cls: 0.2806  loss_bbox: 0.1733
2023/06/10 09:40:28 - mmengine - INFO - Epoch(train) [35][15/19]  lr: 3.8117e-05  eta: 0:07:25  time: 4.3909  data_time: 3.7494  memory: 1623  loss: 0.4554  loss_cls: 0.2816  loss_bbox: 0.1738
2023/06/10 09:40:38 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:40:38 - mmengine - INFO - Switch pipeline now!
2023/06/10 09:40:57 - mmengine - INFO - Epoch(train) [36][ 5/19]  lr: 3.3413e-05  eta: 0:06:43  time: 4.1987  data_time: 3.5925  memory: 1623  loss: 0.4416  loss_cls: 0.2740  loss_bbox: 0.1676
2023/06/10 09:41:10 - mmengine - INFO - Epoch(train) [36][10/19]  lr: 3.0954e-05  eta: 0:06:19  time: 3.9757  data_time: 3.3504  memory: 1623  loss: 0.4299  loss_cls: 0.2677  loss_bbox: 0.1623
2023/06/10 09:41:20 - mmengine - INFO - Epoch(train) [36][15/19]  lr: 2.8609e-05  eta: 0:05:56  time: 3.7924  data_time: 3.1525  memory: 1623  loss: 0.4159  loss_cls: 0.2595  loss_bbox: 0.1564
2023/06/10 09:41:28 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:41:48 - mmengine - INFO - Epoch(train) [37][ 5/19]  lr: 2.4693e-05  eta: 0:05:14  time: 3.5782  data_time: 2.9752  memory: 1623  loss: 0.3973  loss_cls: 0.2488  loss_bbox: 0.1485
2023/06/10 09:41:58 - mmengine - INFO - Epoch(train) [37][10/19]  lr: 2.2692e-05  eta: 0:04:51  time: 3.2766  data_time: 2.6550  memory: 1623  loss: 0.3840  loss_cls: 0.2402  loss_bbox: 0.1437
2023/06/10 09:42:09 - mmengine - INFO - Epoch(train) [37][15/19]  lr: 2.0821e-05  eta: 0:04:28  time: 3.1031  data_time: 2.4674  memory: 1623  loss: 0.3668  loss_cls: 0.2289  loss_bbox: 0.1379
2023/06/10 09:42:14 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:42:34 - mmengine - INFO - Epoch(train) [38][ 5/19]  lr: 1.7789e-05  eta: 0:03:47  time: 2.7720  data_time: 2.2093  memory: 1623  loss: 0.3432  loss_cls: 0.2148  loss_bbox: 0.1284
2023/06/10 09:42:45 - mmengine - INFO - Epoch(train) [38][10/19]  lr: 1.6296e-05  eta: 0:03:25  time: 2.5373  data_time: 1.9874  memory: 1623  loss: 0.3302  loss_cls: 0.2058  loss_bbox: 0.1243
2023/06/10 09:42:54 - mmengine - INFO - Epoch(train) [38][15/19]  lr: 1.4944e-05  eta: 0:03:02  time: 2.4516  data_time: 1.8868  memory: 1623  loss: 0.3169  loss_cls: 0.1962  loss_bbox: 0.1207
2023/06/10 09:43:01 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:43:20 - mmengine - INFO - Epoch(train) [39][ 5/19]  lr: 1.2870e-05  eta: 0:02:22  time: 2.5791  data_time: 2.0203  memory: 1623  loss: 0.3025  loss_cls: 0.1842  loss_bbox: 0.1183
2023/06/10 09:43:31 - mmengine - INFO - Epoch(train) [39][10/19]  lr: 1.1922e-05  eta: 0:02:00  time: 2.4713  data_time: 1.9109  memory: 1623  loss: 0.3008  loss_cls: 0.1828  loss_bbox: 0.1180
2023/06/10 09:43:40 - mmengine - INFO - Epoch(train) [39][15/19]  lr: 1.1122e-05  eta: 0:01:38  time: 2.3939  data_time: 1.8212  memory: 1623  loss: 0.2980  loss_cls: 0.1800  loss_bbox: 0.1180
2023/06/10 09:43:48 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:44:07 - mmengine - INFO - Epoch(train) [40][ 5/19]  lr: 1.0059e-05  eta: 0:00:59  time: 2.5446  data_time: 1.9945  memory: 1623  loss: 0.2911  loss_cls: 0.1752  loss_bbox: 0.1159
2023/06/10 09:44:19 - mmengine - INFO - Epoch(train) [40][10/19]  lr: 9.6792e-06  eta: 0:00:38  time: 2.4980  data_time: 1.9390  memory: 1623  loss: 0.2906  loss_cls: 0.1745  loss_bbox: 0.1161
2023/06/10 09:44:28 - mmengine - INFO - Epoch(train) [40][15/19]  lr: 9.4511e-06  eta: 0:00:17  time: 2.4397  data_time: 1.8953  memory: 1623  loss: 0.2899  loss_cls: 0.1738  loss_bbox: 0.1161
2023/06/10 09:44:34 - mmengine - INFO - Exp name: rtmdet_tiny_1xb12-40e_drink_20230610_084944
2023/06/10 09:44:34 - mmengine - INFO - Saving checkpoint at 40 epochs
2023/06/10 09:44:39 - mmengine - INFO - Epoch(val) [40][ 5/56]    eta: 0:00:18  time: 0.2443  data_time: 0.1764  memory: 1623  
2023/06/10 09:44:40 - mmengine - INFO - Epoch(val) [40][10/56]    eta: 0:00:12  time: 0.2451  data_time: 0.1773  memory: 218  
2023/06/10 09:44:41 - mmengine - INFO - Epoch(val) [40][15/56]    eta: 0:00:09  time: 0.2408  data_time: 0.1762  memory: 218  
2023/06/10 09:44:42 - mmengine - INFO - Epoch(val) [40][20/56]    eta: 0:00:08  time: 0.2172  data_time: 0.1556  memory: 218  
2023/06/10 09:44:42 - mmengine - INFO - Epoch(val) [40][25/56]    eta: 0:00:06  time: 0.2054  data_time: 0.1499  memory: 218  
2023/06/10 09:44:44 - mmengine - INFO - Epoch(val) [40][30/56]    eta: 0:00:05  time: 0.1983  data_time: 0.1444  memory: 218  
2023/06/10 09:44:44 - mmengine - INFO - Epoch(val) [40][35/56]    eta: 0:00:04  time: 0.1996  data_time: 0.1452  memory: 218  
2023/06/10 09:44:45 - mmengine - INFO - Epoch(val) [40][40/56]    eta: 0:00:03  time: 0.1978  data_time: 0.1438  memory: 218  
2023/06/10 09:44:46 - mmengine - INFO - Epoch(val) [40][45/56]    eta: 0:00:02  time: 0.1962  data_time: 0.1405  memory: 218  
2023/06/10 09:44:47 - mmengine - INFO - Epoch(val) [40][50/56]    eta: 0:00:01  time: 0.1997  data_time: 0.1440  memory: 218  
2023/06/10 09:44:48 - mmengine - INFO - Epoch(val) [40][55/56]    eta: 0:00:00  time: 0.1853  data_time: 0.1326  memory: 218  
2023/06/10 09:44:49 - mmengine - INFO - Evaluating bbox...
2023/06/10 09:44:50 - mmengine - INFO - bbox_mAP_copypaste: 0.942 0.995 0.990 -1.000 -1.000 0.942
2023/06/10 09:44:50 - mmengine - INFO - Epoch(val) [40][56/56]    coco/bbox_mAP: 0.9420  coco/bbox_mAP_50: 0.9950  coco/bbox_mAP_75: 0.9900  coco/bbox_mAP_s: -1.0000  coco/bbox_mAP_m: -1.0000  coco/bbox_mAP_l: 0.9420  data_time: 0.1484  time: 0.2044
2023/06/10 09:44:50 - mmengine - INFO - The previous best checkpoint /content/mmdetection/work_dirs/rtmdet_tiny_1xb12-40e_drink/best_coco_bbox_mAP_epoch_30.pth is removed
2023/06/10 09:44:52 - mmengine - INFO - The best checkpoint with 0.9420 coco/bbox_mAP at 40 epoch is saved to best_coco_bbox_mAP_epoch_40.pth.
